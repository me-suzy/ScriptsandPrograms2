<?xml version="1.0"?><phpdoc><class name="IWARE" extends="" undoc="false" access="public" package="iWare Professional"><file>../iware3.0.9/admin/iware.php</file><doc><author>David N. Simmons &amp;lt;http://www.dsiware.com&amp;gt;</author><description/><shortdescription>Core iWare application class</shortdescription><version>3.0.9</version><copyright>iWare</copyright></doc><function name="IWARE" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Class constructor (runs upon intialization of the class). Establishes a datbase connection and selectes the database for use by the application.</shortdescription></doc></function><function name="connectDb" undoc="false" access="private"><doc><parameter name="$host" type="string">MySQL server hostname or IP address</parameter><parameter name="$user" type="string">MySQL server username</parameter><parameter name="$pwd" type="string">MySQL server password</parameter><return type="void"/><description/><shortdescription>Connects to the configured MySQL database and stores the connection handle returned to class variable</shortdescription></doc></function><function name="closeDb" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Closes an open connection to the MySQL database (if open)</shortdescription></doc></function><function name="selectDb" undoc="false" access="private"><doc><parameter name="$dbname" type="string">Database name to select for use by the application</parameter><return type="void"/><description/><shortdescription>Selects the configured MySQL database for use</shortdescription></doc></function><function name="query" undoc="false" access="private"><doc><parameter name="$sql" type="string">MySQL query string to be executed</parameter><return name="" type="array"/><description/><shortdescription>Issues a MySQL query and returns the returned result from the query where applicable</shortdescription></doc></function><function name="result" undoc="false" access="private"><doc><parameter name="$result" type="array">Sql result set to be used</parameter><parameter name="$row" type="integer">Result set row number to be used when fetching the requested data</parameter><parameter name="$field" type="string">Result set field name to be used when fetching the requested data</parameter><return type="void"/><description/><shortdescription>Returns the data present in a result set for a specific row number and field name</shortdescription></doc></function><function name="countResult" undoc="false" access="private"><doc><parameter name="$result" type="array">Result set returned from a sql query to be used</parameter><return type="void"/><description/><shortdescription>Returns the total number of rows returned from a sql query</shortdescription></doc></function><function name="freeResult" undoc="false" access="private"><doc><parameter name="$result" type="array">Result set returned from a sql query that should be freed from memory</parameter><return type="void"/><description/><shortdescription>Frees a existing MySQL result set from memory</shortdescription></doc></function><function name="StatDB" undoc="false" access="private"><doc><return name="" type="string"/><description/><shortdescription>Returns the current version of the installed MySQL server software</shortdescription></doc></function><function name="tableExists" undoc="false" access="private"><doc><parameter name="$tablename" type="string">The database table name to check for existance in the configured database</parameter><return name="" type="boolean"/><description/><shortdescription>Checks if a given table exists in the configured database. Returns TRUE if the table exists, false otherwise.</shortdescription></doc></function><function name="alreadyLoggedIn" undoc="false" access="private"><doc><return name="" type="boolean"/><description/><shortdescription>Checks if a user is already logged into the application by checking for the presence of a defined PHP session variable. If the variable is defined then the method will return TRUE</shortdescription></doc></function><function name="getId" undoc="false" access="private"><doc><return name="" type="string"/><description/><shortdescription>Returns the value of an existing PHP session variable</shortdescription></doc></function><function name="maybeOpenLogInWindow" undoc="false" access="private"><doc><return name="" type="boolean"/><description/><shortdescription>Determines whether or not to display the login interface based on whether or not a user has logged into the system and established a valid PHP session variable. If a sesion variable has been defined ( the user is logged in ) then the method will simply return. If the session has not yet been defined then the login dialog will be displayed.</shortdescription></doc></function><function name="authUserControl" undoc="false" access="private"><doc><return name="" type="boolean"/><description/><shortdescription>This method is now deprecated</shortdescription></doc></function><function name="logon" undoc="false" access="private"><doc><parameter name="$user" type="string">Username to authenticate</parameter><parameter name="$userpwd" type="string">Password to authenticate</parameter><return name="" type="boolean"/><description/><shortdescription>Attempts to authenticate a user by credentials posted from the login interface. If authentication is sucessfull then this method will return FALSE, otherwise it will return TRUE</shortdescription></doc></function><function name="logoff" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Log a user out of the application by destroying the existing PHP session variable</shortdescription></doc></function><function name="displayLogInDialog" undoc="false" access="private"><doc><parameter name="$badLogIn" type="boolean">Variable to define the state of the login interface if TRUE then the login interface will be in failed login state, otherwise the login interface will be in first time login state</parameter><return type="void"/><description/><shortdescription>Outputs the user login interface in two states - first time login and failed login</shortdescription></doc></function><function name="EncryptPassword" undoc="false" access="private"><doc><parameter name="$input" type="string">Password string to encrypt</parameter><return name="" type="string"/><description/><shortdescription>Returns an encrypted versionof a supplied password string</shortdescription></doc></function><function name="SystemSummary" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the system summary interface</shortdescription></doc></function><function name="Users_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the user management interface</shortdescription></doc></function><function name="Users_AddForm" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the add new user interface</shortdescription></doc></function><function name="Users_Add" undoc="false" access="private"><doc><parameter name="$realname" type="string">The desired name for the user account</parameter><parameter name="$group_id" type="string">The desired group ID for the user account</parameter><parameter name="$username" type="string">The desired username for the user account</parameter><parameter name="$password" type="string">The desired password for the user account</parameter><return type="void"/><description/><shortdescription>Adds a user account to the system</shortdescription></doc></function><function name="Users_UpdateForm" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user account to be displayed for editing</parameter><return type="void"/><description/><shortdescription>Outputs the edit user account interface</shortdescription></doc></function><function name="Users_Update" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID for the user account that is to be updated</parameter><parameter name="$realname" type="string">The desired name for the user account</parameter><parameter name="$group_id" type="string">The desired group ID for the user account</parameter><parameter name="$username" type="string">The desired username for the user account</parameter><parameter name="$password" type="string">The desired password for the user account</parameter><return type="void"/><description/><shortdescription>Updates an existing user account in the system</shortdescription></doc></function><function name="Users_Delete" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user account to be deleted from the system</parameter><return type="void"/><description/><shortdescription>Deletes a user account from the system</shortdescription></doc></function><function name="Users_GetCount" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Returns a total count of all user accounts defined in the system</shortdescription></doc></function><function name="Users_GetUserName" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user account</parameter><return name="" type="string"/><description/><shortdescription>Returns the name of a user account by the user accounts record ID</shortdescription></doc></function><function name="Users_GetUserGroup" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user account</parameter><return name="" type="string"/><description/><shortdescription>Returns the ID of a user group of which a user account belongs by the user accounts record ID</shortdescription></doc></function><function name="Group_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the group management interface</shortdescription></doc></function><function name="Group_AddForm" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the add new group interface</shortdescription></doc></function><function name="Group_Add" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Adds a user group to the system</shortdescription></doc></function><function name="Group_UpdateForm" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user group to be displayed for editing</parameter><return type="void"/><description/><shortdescription>Outputs the edit user group interface</shortdescription></doc></function><function name="Group_Update" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID for the user group that is to be updated</parameter><return type="void"/><description/><shortdescription>Updates an existing user group in the system</shortdescription></doc></function><function name="Group_Delete" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user group to be deleted from the system</parameter><return type="void"/><description/><shortdescription>Deletes a user group from the system</shortdescription></doc></function><function name="Group_GetCount" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Returns a total count of all user groups defined in the system</shortdescription></doc></function><function name="Group_GetGroupList" undoc="false" access="private"><doc><return name="" type="array"/><description/><shortdescription>Returns an array containing the record ID of all user groups defined in the system</shortdescription></doc></function><function name="Group_GetGroupName" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user group</parameter><return name="" type="string"/><description/><shortdescription>Retuns the name of a user group by its record ID</shortdescription></doc></function><function name="Group_GetGroupAuth" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the user group</parameter><return name="" type="array"/><description/><shortdescription>Returns an associative array of permission levels for control panel functions for a given user group</shortdescription></doc></function><function name="Header_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the site header management interface</shortdescription></doc></function><function name="Header_Update" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Updates changes made to the site header</shortdescription></doc></function><function name="Header_ImageListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option tags containing names of images present in the system from the files/ directory of the installation</shortdescription></doc></function><function name="Header_FontListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>This method is an alias to LoadFontsListBox ()</shortdescription></doc></function><function name="Header_FontSizeListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containing font size in points from 1 to 8</shortdescription></doc></function><function name="Footer_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the site footer management interface</shortdescription></doc></function><function name="Footer_Update" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Updates changes made to the site footer</shortdescription></doc></function><function name="Skins_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the choose active skin interface</shortdescription></doc></function><function name="Skins_Choose" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Sets the active skin for the site at a global level</shortdescription></doc></function><function name="Skins_ListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containing names of skins available to the system from the skins/ directory of the installation</shortdescription></doc></function><function name="Skins_PreviewImage" undoc="false" access="private"><doc><parameter name="$skin" type="string">The name of the skin to display a thumbnail for</parameter><return type="void"/><description/><shortdescription>Outputs a thumbnail screenshot of the currently active skin in the system. If a thumbnail is not available for the given skin name then a no screenshot available message will be displayed instead. The thumbnail image for a given skin must be named screenshot.jpg.</shortdescription></doc></function><function name="Skins_GetCount" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Returns a total count of all skins available to the system</shortdescription></doc></function><function name="Docs_Recurse" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of a given document to recurse from, the supplied record will be used as the starting point for the document recursion</parameter><parameter name="$indent" default="0" type="integer">The curent indice of the recursion used to create a spacer to form the document tree view</parameter><return type="void"/><description/><shortdescription>Works with Docs_Manager () to recursively output the site document structure to the user</shortdescription></doc></function><function name="Docs_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the documents manager interface</shortdescription></doc></function><function name="Docs_GetNextDocOrder" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Returns the next available document navigation ordering value for use when creating a new document in the system</shortdescription></doc></function><function name="Docs_GetName" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document</parameter><return name="" type="string"/><description/><shortdescription>Returns the link text for a given document by its record ID</shortdescription></doc></function><function name="Docs_Add" undoc="false" access="private"><doc><parameter name="$use_text" default="0" type="integer">Optional vlue to indicate whether to use a 32 char key or the link text as the document ID, 1 uses the documents link text, 0 creates a 32 char ID. If this value is not given the default of 0 will be used.</parameter><return type="void"/><description/><shortdescription>Adds a document to the system</shortdescription></doc></function><function name="Docs_Update" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document to be displayed for editing</parameter><return type="void"/><description/><shortdescription>Updates changes made to an existing document in the system</shortdescription></doc></function><function name="Docs_Delete" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document to be deleted from the system</parameter><return type="void"/><description/><shortdescription>Deletes an existing document from the system</shortdescription></doc></function><function name="Docs_GetCount" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Returns a total count of all documents defined within the system</shortdescription></doc></function><function name="Docs_ListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containing names of documents defined in the system</shortdescription></doc></function><function name="Nav_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the navigation manager interface</shortdescription></doc></function><function name="Nav_Choose" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Updates the active navigation for the site at a global level</shortdescription></doc></function><function name="Nav_ListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containing navigation styles available to the system form the navbar/ directory of the installation</shortdescription></doc></function><function name="Nav_Recurse" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of a given document to recurse from, the supplied record will be used as the starting point for the document recursion</parameter><parameter name="$indent" default="0" type="integer">The curent indice of the recursion used to create a spacer to form the document tree view</parameter><return type="void"/><description/><shortdescription>Works with Nav_Order () to recursively output the site document structure to the user</shortdescription></doc></function><function name="Nav_Order" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the navigation ordering interface</shortdescription></doc></function><function name="Nav_OrderUpdateRecurse" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of a given document to recurse from, the supplied record will be used as the starting point for the document recursion</parameter><return type="void"/><description/><shortdescription>Works with Nav_OrderUpdate () to recursively update the site document structure navigation ordering</shortdescription></doc></function><function name="Nav_OrderUpdate" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Updates changes made to the site navigation order</shortdescription></doc></function><function name="Nav_GetLinkText" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document</parameter><return name="" type="string"/><description/><shortdescription>Returns the link text for a given document by its record ID</shortdescription></doc></function><function name="Nav_GetNav" undoc="false" access="private"><doc><return name="" type="array"/><description/><shortdescription>Returns an array containg the ID of all documents defined in the system for use with navigation</shortdescription></doc></function><function name="Nav_GetSubNav" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of a document</parameter><return name="" type="array"/><description/><shortdescription>Returns an array containg the ID of all documents defined in the system beneath a given document by its record ID</shortdescription></doc></function><function name="Nav_HasSubNav" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of a document</parameter><return name="" type="boolean"/><description/><shortdescription>Returns TRUE if a given document has existing documents defined as child documents beneath it, returns FALSE otherwise</shortdescription></doc></function><function name="Nav_GetCount" undoc="false" access="private"><doc><return name="" type="integer"/><description/><shortdescription>Retuns a total count of all navigation styles availabkle to the system from the navbar/ directory of the installation</shortdescription></doc></function><function name="LoadFontsListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Ouputs a number of HTML form option elements containing names of fonts available to the system from the fonts/DEFAULT support file</shortdescription></doc></function><function name="GetFontsArray" undoc="false" access="private"><doc><return name="" type="array"/><description/><shortdescription>Returns an array of font names avaialble to the system from the fonts/DEFAULT support file</shortdescription></doc></function><function name="File_UploadForm" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the file upload interface</shortdescription></doc></function><function name="File_Upload" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Uploads a file from the users local hard disk to the webserver and if indicated to do so uses resizeImage () to resixze an image to the specified dimensions after upload</shortdescription></doc></function><function name="File_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the file management interface</shortdescription></doc></function><function name="File_Delete" undoc="false" access="private"><doc><parameter name="$filename" type="string">The filename of the file that is to be deleted from the files/ directory</parameter><return type="void"/><description/><shortdescription>Deletes a file from the files/ directory of the installation</shortdescription></doc></function><function name="File_ListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containg file names from the files/ directory of the installation</shortdescription></doc></function><function name="File_GetCount" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Returns a total count of files available to the system located in the files/ directory of the installation</shortdescription></doc></function><function name="Mod_Manager" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the initial modules management interface to the user, if no modules are present in the mods/ directory of the installation the interface will not be displayed</shortdescription></doc></function><function name="Mod_ListBox" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs a number of HTML form option elements containing names of modules avaialable to the system from the mods/ directory of the installation</shortdescription></doc></function><function name="Mod_GetCount" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Returns a total count of all modules avalable to the system from the mods/ directory of the installation</shortdescription></doc></function><function name="Mod_MissingDB" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>This method is now deprecated</shortdescription></doc></function><function name="resizeImage" undoc="false" access="private"><doc><parameter name="$image_path" type="string">The source path of the original image</parameter><parameter name="$thumb_path" type="string">The output path of the new image</parameter><parameter name="$image_name" type="string">The filename of the uploaded image</parameter><parameter name="$thumb_width" type="integer">The new width dimension to resize to</parameter><parameter name="$thumb_height" type="integer">The new height dimension to resize to</parameter><parameter name="$type" type="string">String specifying which image MIME type to use either image/gif or image/pjpeg</parameter><return name="" type="boolean"/><description/><shortdescription>Uses GDLib supprt in PHP to resize an uploaded image to specified dimensions. Returns FALSE if the required GDLib support is not enabled for PHP, TRUE otherwise.</shortdescription></doc></function><function name="Client_GetMETATitle" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document</parameter><return name="" type="string"/><description/><shortdescription>Returns the META title for a given document by its record ID</shortdescription></doc></function><function name="Client_GetMETAKeywords" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document</parameter><return name="" type="string"/><description/><shortdescription>Returns the META keywords for a given document by its record ID</shortdescription></doc></function><function name="Client_GetMETADescription" undoc="false" access="private"><doc><parameter name="$id" type="string">The record ID of the document</parameter><return name="" type="string"/><description/><shortdescription>Returns the META description for a given document by its record ID</shortdescription></doc></function><function name="Client_GetSkin" undoc="false" access="private"><doc><return name="" type="string"/><description/><shortdescription>Returns the current active skin name for the site</shortdescription></doc></function><function name="Client_GetNav" undoc="false" access="private"><doc><return name="" type="string"/><description/><shortdescription>Returns the current active navigation style for the site</shortdescription></doc></function><function name="Client_GetContent" undoc="false" access="private"><doc><parameter name="$D" type="string">The record ID of the requested document content to be displayed</parameter><parameter name="$modVars" default="&amp;quot;&amp;quot;" type="string">The rA pipe (|) delimited string of variable names posted by a document for use with a given module. If not supplied no module variables will be processed and a default empty string will be used.</parameter><return type="void"/><description/><shortdescription>Outputs the content for a requested document, and also optionally processes variables posted for use with any embedded modules in a given doument</shortdescription></doc></function><function name="Client_GetHeader" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Ouputs the site header as HTML / text or as an image dependingon the configured header display mode</shortdescription></doc></function><function name="Client_GetFooter" undoc="false" access="private"><doc><return type="void"/><description/><shortdescription>Outputs the site footer as HTML / text</shortdescription></doc></function><variable name="$dbcon" access="private" type="integer"><doc><description/><shortdescription>Variable used to store the active database connection handle</shortdescription></doc></variable></class></phpdoc>