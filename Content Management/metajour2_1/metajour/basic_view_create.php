<?php
/**
 * @author Jan H. Andersen <jha@ipwsystems.dk>
 * @author Martin R. Larsen <mrl@ipwsystems.dk>
 * @copyright {@link http://www.ipwsystems.dk/ IPW Systems a.s}
 * @license http://opensource.org/licenses/gpl-license.php GNU Public License
 * @package METAjour
 * @subpackage view
 */

require_once('basic_view.php');
require_once('basic_field.php');

class basic_view_create extends basic_view {

	var $_objcols;
	
	function basic_view_create() {
		$this->basic_view();
		$this->submittop = 13;
	}

	function loadLanguage() {
		basic_view::loadLanguage();
		$this->loadLangFile('basic_view_create');
	}
	

	function create_list($objectid) {
		$relationurl = '';
		if ($this->relcol) $relationurl = '_relcol=' . $this->relcol . '&_relval=' . $this->relval;
		return $this->button('list.png',$this->gl('img_list'),$this->callgui($this->otype,'','','list','','',$this->parentid, $relationurl));
	}

	function titleBar() {
		$result .= '<div class="metatitle">'.$this->shadowtext($this->gl('title').' :: '.$this->gl('name')).'</div>';
		return $result;
	}
	
	function buttonBar() {
		$result = '<div class="metabuttonbar">';
		if ($this->canView('list')) $result .= $this->create_list($this->objectid[0]);
		$result .= '</div>';
		
		return $result;
	}

	function customFields() {
	}

	function beforeForm() {
		return '<div class="metabox">';
	}
	
	function startForm() {
	}
	
	function endForm() {
	}
	
	function afterForm() {
		return '</div>';
	}

	function viewStart() {
		return '<div class="metawindow">';
	}
	
	function viewEnd() {
		return '</div>';
	}
	

	function submitButtons() {
		$result .= '<div style="padding-bottom: 14px;">';
		$result .= '<input name="submit" type="submit" class="mformsubmit" value="'.$this->gl('button_create').'">';
		$result .= '</div>';
		return $result;
	}

	function categorySelection() {
		$field = new basic_field($this);
		$result = $this->makeField($this->gl('_label_category'),$field->categorySelection(NULL,'__categories__'));
		return $result;
	}

	function webAccessSelection() {
		$field = new basic_field($this);
		$result = $this->makeField($this->gl('_label_webaccess'),$field->webAccessSelection(NULL,'__webaccess__'));
		return $result;
	}

	function sysAccessSelection() {
		$field = new basic_field($this);
		$result = $this->makeField($this->gl('_label_sysaccess'),$field->sysAccessSelection(NULL,'__sysaccess__'));
		return $result;
	}

	function parseFields() {
		$fieldobj = new basic_field($this);
		$result = $fieldobj->parseFieldsForm($this->_objcols);
		return $result;
	}

	function numNoneHiddenCols() {
		$res = 0;
		foreach ($this->_objcols as $cur) {
			if ($cur['inputtype'] != UI_HIDDEN) $res++;
		}
		return $res;
	}
	
	function view() {
		$system_url = $this->userhandler->getSystemUrl();
		$this->_obj = owNew($this->otype);
		if (!$this->_obj->hasFieldType('html')) 
			$this->context->addheader('
			<script type="text/javascript" src="' . $system_url . 'js/fValidate.config.js"></script>
			<script type="text/javascript" src="' . $system_url . 'js/fValidate.core.js"></script>
			<script type="text/javascript" src="' . $system_url . 'js/fValidate.lang-enUS.js"></script>
			<script type="text/javascript" src="' . $system_url . 'js/fValidate.validators.js"></script>
			');
		$this->context->addHeader('<script type="text/javascript">'.$this->relatedFieldsHeader().'</script>');
		$this->_obj->initLayout();
		$result .= $this->viewStart();
		$result .= $this->titleBar();
		$result .= $this->buttonBar();
		$result .= $this->beforeForm();
		/*
		* @todo: all input fields should be generated by $this->returnMePost
		* why don't they ?
		*/

		if (!$this->_obj->hasFieldType('html')) $onsubmit = 'onsubmit="return validateForm(this);"';
		$result .= '<form name="metaform" id="metaform" method="post" action="'.$this->getGuiUrl().'" enctype="multipart/form-data" '.$onsubmit.' style="spacing: 0px; margin: 0px; padding: 0px;">';
		$result .= $this->returnViewPost($this->view);
		$result .= '<input type="hidden" name="cmd" value="create">';
		$result .= '<input type="hidden" name="otype" value="'.$this->otype.'">';
		if ($this->userhandler->getWebUser()) {
			if ($_REQUEST['pageid']) $result .= '<input type="hidden" name="pageid" value="'.$_REQUEST['pageid'].'">';
		}
		if ($this->parentid) $result .= '<input type="hidden" name="_parentid" value="'.$this->parentid.'">';
		if ($this->relcol) $result .= '<input type="hidden" name="_relcol" value="'.$this->relcol.'">';
		if ($this->relval) $result .= '<input type="hidden" name="_relval" value="'.$this->relval.'">';
		$this->_objcols = owDatatypeColsDesc($this->otype);
		if ($this->numNoneHiddenCols() > $this->submittop) 
			$result .= $this->submitButtons();
		$result .= $this->startForm();
		$result .= $this->parseFields();
		$result .= $this->customFields();
		$result .= '<br>';
		$result .= $this->endForm();
		$result .= $this->submitButtons();
		if ($this->CanView('category') && !$this->_obj->isVariant()) $result .= $this->categorySelection();
		if ($this->CanView('access') && !$this->_obj->isVariant()) $result .= $this->webAccessSelection();
		if ($this->CanView('access') && !$this->_obj->isVariant()) $result .= $this->sysAccessSelection();
		$result .= '</form>';
		$result .= $this->afterForm();
		$result .= '<br><br><br>';
		$result .= $this->viewEnd();;
		$result .= '<br><br><br>';
		$result .= '<script type="text/javascript">';
		$result .= 'var field = document.getElementById(\''.$this->_obj->prv_column[0]['name'].'\');';
		$result .= 'try { field.focus(); } catch (e) {}';
		$result .= '</script>';
		return $result;
	}
}

?>