// +-----------------------------------------------------------------------+
// | BTT-License [TM] :.:.: License Distribution                   		   |
// +-----------------------------------------------------------------------+
// | Copyright (c)1998 - 2005 BTT Scripts Inc.				               |
// +-----------------------------------------------------------------------+
// | This source file is subject to the BTT Scripts Inc. End User License  |
// | Agreement (EULA), that is bundled with this package in the file       |
// | LICENSE, and is available at through the world-wide-web at            |
// | http://www.btt-scripts.com/bttsoft/LICENSE.txt                        |
// | If you did not receive a copy of the BTT Scripts Inc. license and are |
// | unable to obtain it through the world-wide-web, please send a note    |
// | to license@btt-scripts.com so we can email you a copy immediately.    |
// +-----------------------------------------------------------------------+
// | Authors: BTT Scripts Inc. <bttsoft@btt-scripts.com>     			   |
// | Support: http://www.btt-scripts.com                                   |
// | Questions? bttsupport@btt-scripts.com                                 |
// +-----------------------------------------------------------------------+
// | BTT, BTT-Crypt, BTT-Support, BTT-Bill, BTT-Web, BTT-Panel, BTT-Bugs,  |
// | BTT-News , BTT-AdCenter , BTT-LiveOnline , BTT-License, and BTT-Faq   |
// | are trademarks of BTT Scripts Inc. BTT Scripts is a subdivision of    |
// | BTT-Hosting Inc. All rights reserved and enforced.                    | 
// +-----------------------------------------------------------------------+


Table Of Contents

## ------------------------------------------ ##

1, Introduction

2. How It Works

    a. What Each Script Does, And How To Use It

3. Implementation

    a. Using The Generator API
    b. Including The phpunlock.php Script With Your Distributions
    c. The Nessecesity Of A PHP Encryption System

4. Ideas

    a. Limited Functionality (Crippled) Shareware
    b. Time Limited Demos
    c. License Enforcement
    d. Email On Activation


5. Troubleshooting

    a. The codes generated by the generator keep coming up invalid in my software!



## ------------------------------------------ ##

1. Introduction

## ------------------------------------------ ##

Congradulations! You are now in possession of a simple, yet increadibly versitile
system for protecting your commerical PHP scripts from unauthorized use or
distribution.

When used in conjunction with an code encryption system such as Zend, Source
Guardian, or Ion Cube, PHP Unlock provides powerful security that is very hard
to bypass!

What I have given you is a framework to work from. This gives you the utmost
flexability in deciding how to protect your applications.

Protecting your scripts is as simple as including one file, phpunlock.php, and
making a call to it to validate the unlock code provided against thier name, domain
name, and/or even the database being used for your application.

This file is designed to help you implement the framework into your own scripts
quickly and easily. There is little doubt in my mind that if you are reading this
you will be able to quickly understand and implement the framework. 

Lets continue with what each file does, and how it works.



## ------------------------------------------ ## 

1. How It Works

## ------------------------------------------ ##

The PHP Unlock framework consists of 2 major parts, the generation API, and the 
validation API. 

The generation API resides on your website, and is used to generate unlock codes
for your customers, either in real time, or manually. Whichever you prefer.

The validation API is what you distribute with your scripts, and will ultimatly
tell your script "yes it's good", or "no, time to shut down".

The unlock codes generated are completely unique to you and your product(s). 

This is done by specifying 4 unique seed codes, which conist of letters and numbers,
and can be of any length. These seed codes are passed to both the generation api, and
the validation API, and are used to validate your unlock codes.

The reason for this is so another developer with PHP unlock, can't just generate his
own unlock codes for your product.


## ------------------------------------------ ##
A. What Each Script Does, And How To Use It 
## ------------------------------------------ ##

Here is a quick rundown of all the scripts in the package:


1. generate_api.php

This script is the core engine for generating unlock codes for your customers. It
can be called from your order fulfilment system, and return a unlock code instantly.

You must provide at least one of the following peices of information:

1. Customers Name
2. Domain Name
3. Database
4. Expiry Date (Unix Time Code)

The system will then return a code based on this information, locking it to that
info. If you provide a domain name, you can now lock it to a specific domain name.

***This file is encoded in the standard version.



2. generate.php

This script is an example of how to use the generate_api.php file. It is a manual
code generator that allows you to enter any of the license data and generate a 
unlock code to send to your customers.

This script is not encrypted so you can see how the API call works. As you can see,
it's nothing fancy, and will be very simple to include in your own scripts.



3. unlock.php

This script is the script you include with your distributed scripts to validate
thier unlock code and license. It is called from within your script, and will
return various information for you to verify before allowing your program, or 
certain functions to run.

From inside your scripts you include this file, and then call the following
subroutine, with the apropriate data:

$phpunlock_info = phpunlock_validate($code,$name,$domain,$database,$seed1,$seed2,$seed3,$seed4);

It will then return an array wtih 4 peices of information in $phpunlock_info:

$phpunlockinfo[status] = valid, invalid, or expired
$phpunlockinfo[expiry] = Expiry Date In Unix Timecode Format
$phpunlockinfo[name]   = Name of the registered user (if provided)
$phpunlockinfo[domain] = Domain name (if provided)

From this information you can allow your program (or certain features) to run,
or display an error message telling them that thier license is invalid or
expired, and even provide them with thier expiry date.

***This file is encrypted in the standard version. The pro version includes full
source code that can be included right inside your scripts, no need to include
extra files with your distribution.



4. generate_seeds.php

This script will instantly generate 4 unique seeds for you to use for your
scripts.

It is not nessicary to use this script (you can use your own), but this is
definatly the quickest and easiest method!

***This script is not encrypted.



5. sample.php


This is a phpinfo() script that will only run if the correct unlock code is
provided. It is meant to give you a idea of how to implement the system with
your own scripts.

You will need to generate a code using the generate API for your domain.

The system comes ready to go "out of the box" with sample seed codes provided,
so just run the generator.php script, enter your name and domain (you can leave
the database field blank), and then grab the code, and enter your details into
this script.

If the code is correct, you will see the phpInfo screen. If it is not correct,
you will see an error screen.

***This script is not encrypted.




## ------------------------------------------ ##

3. Implementation

## ------------------------------------------ ##

